{"ast":null,"code":"var _jsxFileName = \"/Users/ikramsouita/WebstormProjects/Graph-front/src/components/ListComptes.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport DeleteCompte from \"./DeleteComptes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\nconst ListComptes = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_ALL_COMPTES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\",\n      color: \"red\"\n    },\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n\n  // Ajouter une vérification pour éviter les erreurs\n  const comptes = (data === null || data === void 0 ? void 0 : data.allComptes) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px\",\n      padding: \"20px\",\n      borderRadius: \"15px\",\n      background: \"#ecf0f1\",\n      boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: titleStyle,\n      children: \"Liste des Comptes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: tableStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: headerStyle,\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: headerStyle,\n            children: \"Solde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: headerStyle,\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: headerStyle,\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: headerStyle,\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: comptes.map(compte => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: rowStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: cellStyle,\n            children: compte.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: cellStyle,\n            children: compte.solde\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: cellStyle,\n            children: compte.dateCreation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: cellStyle,\n            children: compte.typeCompte\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: cellStyle,\n            children: /*#__PURE__*/_jsxDEV(DeleteCompte, {\n              id: compte.id,\n              refetch: refetch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, compte.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ListComptes, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n  return [useQuery];\n});\n_c = ListComptes;\nconst titleStyle = {\n  fontSize: \"1.8em\",\n  textAlign: \"center\",\n  marginBottom: \"20px\",\n  color: \"#34495e\",\n  fontFamily: \"'Roboto', sans-serif\"\n};\nconst tableStyle = {\n  width: \"100%\",\n  borderCollapse: \"collapse\"\n};\nconst headerStyle = {\n  textAlign: \"center\",\n  backgroundColor: \"#34495e\",\n  color: \"#fff\",\n  padding: \"10px\"\n};\nconst rowStyle = {\n  borderBottom: \"1px solid #ddd\"\n};\nconst cellStyle = {\n  textAlign: \"center\",\n  padding: \"10px\",\n  fontFamily: \"'Roboto', sans-serif\",\n  color: \"#2c3e50\"\n};\nexport default ListComptes;\nvar _c;\n$RefreshReg$(_c, \"ListComptes\");","map":{"version":3,"names":["React","useQuery","gql","DeleteCompte","jsxDEV","_jsxDEV","GET_ALL_COMPTES","ListComptes","_s","loading","error","data","refetch","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","message","comptes","allComptes","margin","padding","borderRadius","background","boxShadow","titleStyle","tableStyle","headerStyle","map","compte","rowStyle","cellStyle","id","solde","dateCreation","typeCompte","_c","fontSize","marginBottom","fontFamily","width","borderCollapse","backgroundColor","borderBottom","$RefreshReg$"],"sources":["/Users/ikramsouita/WebstormProjects/Graph-front/src/components/ListComptes.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport DeleteCompte from \"./DeleteComptes\";\n\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\n\nconst ListComptes = () => {\n    const { loading, error, data, refetch } = useQuery(GET_ALL_COMPTES);\n\n    if (loading) return <p style={{ textAlign: \"center\" }}>Chargement...</p>;\n    if (error)\n        return (\n            <p style={{ textAlign: \"center\", color: \"red\" }}>Erreur : {error.message}</p>\n        );\n\n    // Ajouter une vérification pour éviter les erreurs\n    const comptes = data?.allComptes || [];\n\n    return (\n        <div\n            style={{\n                margin: \"20px\",\n                padding: \"20px\",\n                borderRadius: \"15px\",\n                background: \"#ecf0f1\",\n                boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n            }}\n        >\n            <h2 style={titleStyle}>Liste des Comptes</h2>\n            <table style={tableStyle}>\n                <thead>\n                <tr>\n                    <th style={headerStyle}>ID</th>\n                    <th style={headerStyle}>Solde</th>\n                    <th style={headerStyle}>Date</th>\n                    <th style={headerStyle}>Type</th>\n                    <th style={headerStyle}>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {comptes.map((compte) => (\n                    <tr key={compte.id} style={rowStyle}>\n                        <td style={cellStyle}>{compte.id}</td>\n                        <td style={cellStyle}>{compte.solde}</td>\n                        <td style={cellStyle}>{compte.dateCreation}</td>\n                        <td style={cellStyle}>{compte.typeCompte}</td>\n                        <td style={cellStyle}>\n                            <DeleteCompte id={compte.id} refetch={refetch} />\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst titleStyle = {\n    fontSize: \"1.8em\",\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n    color: \"#34495e\",\n    fontFamily: \"'Roboto', sans-serif\",\n};\n\nconst tableStyle = {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n};\n\nconst headerStyle = {\n    textAlign: \"center\",\n    backgroundColor: \"#34495e\",\n    color: \"#fff\",\n    padding: \"10px\",\n};\n\nconst rowStyle = {\n    borderBottom: \"1px solid #ddd\",\n};\n\nconst cellStyle = {\n    textAlign: \"center\",\n    padding: \"10px\",\n    fontFamily: \"'Roboto', sans-serif\",\n    color: \"#2c3e50\",\n};\n\nexport default ListComptes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}