{"ast":null,"code":"var _jsxFileName = \"/Users/ikramsouita/WebstormProjects/Graph-front/src/components/ListComptes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport AddCompte from \"./AddCompte\"; // Importer le composant AddCompte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\nconst ListComptes = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_COMPTES);\n  const [isPopupVisible, setPopupVisible] = useState(false);\n\n  // Définir la fonction togglePopup pour afficher/masquer la popup\n  const togglePopup = () => {\n    setPopupVisible(!isPopupVisible); // Inverser l'état pour afficher/masquer la popup\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des Comptes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: togglePopup,\n      children: \"Ajouter un Compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Solde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date de Cr\\xE9ation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type de Compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.solde\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.dateCreation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.typeCompte\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, compte.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(AddCompte, {\n      togglePopup: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ListComptes, \"SpArAfRCyp4m1Z6I/5efPZ7KDyQ=\", false, function () {\n  return [useQuery];\n});\n_c = ListComptes;\nexport default ListComptes;\nvar _c;\n$RefreshReg$(_c, \"ListComptes\");","map":{"version":3,"names":["React","useState","useQuery","gql","AddCompte","jsxDEV","_jsxDEV","GET_ALL_COMPTES","ListComptes","_s","loading","error","data","isPopupVisible","setPopupVisible","togglePopup","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onClick","allComptes","map","compte","id","solde","dateCreation","typeCompte","_c","$RefreshReg$"],"sources":["/Users/ikramsouita/WebstormProjects/Graph-front/src/components/ListComptes.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport AddCompte from \"./AddCompte\"; // Importer le composant AddCompte\n\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\n\nconst ListComptes = () => {\n    const { loading, error, data } = useQuery(GET_ALL_COMPTES);\n    const [isPopupVisible, setPopupVisible] = useState(false);\n\n    // Définir la fonction togglePopup pour afficher/masquer la popup\n    const togglePopup = () => {\n        setPopupVisible(!isPopupVisible); // Inverser l'état pour afficher/masquer la popup\n    };\n\n    if (loading) return <p>Chargement...</p>;\n    if (error) return <p>Erreur : {error.message}</p>;\n\n    return (\n        <div className=\"container\">\n            <h2>Liste des Comptes</h2>\n            <button className=\"add-button\" onClick={togglePopup}>Ajouter un Compte</button>\n\n            {/* Affichage de la liste des comptes */}\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Solde</th>\n                    <th>Date de Création</th>\n                    <th>Type de Compte</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.allComptes.map((compte) => (\n                    <tr key={compte.id}>\n                        <td>{compte.id}</td>\n                        <td>{compte.solde}</td>\n                        <td>{compte.dateCreation}</td>\n                        <td>{compte.typeCompte}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n\n            {/* Affichage de la popup si isPopupVisible est vrai */}\n            {isPopupVisible && <AddCompte togglePopup={togglePopup} />}\n        </div>\n    );\n};\n\nexport default ListComptes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}