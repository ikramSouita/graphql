{"ast":null,"code":"var _jsxFileName = \"/Users/ikramsouita/WebstormProjects/Graph-front/frontend/src/components/Comptes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\nconst Comptes = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_COMPTES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des Comptes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Solde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date de Cr\\xE9ation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type de Compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.solde\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.dateCreation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: compte.typeCompte\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, compte.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Comptes, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Comptes;\nexport default Comptes;\nvar _c;\n$RefreshReg$(_c, \"Comptes\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_ALL_COMPTES","Comptes","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","allComptes","map","compte","id","solde","dateCreation","typeCompte","_c","$RefreshReg$"],"sources":["/Users/ikramsouita/WebstormProjects/Graph-front/frontend/src/components/Comptes.js"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_ALL_COMPTES = gql`\n  query GetAllComptes {\n    allComptes {\n      id\n      solde\n      dateCreation\n      typeCompte\n    }\n  }\n`;\n\nconst Comptes = () => {\n    const { loading, error, data } = useQuery(GET_ALL_COMPTES);\n\n    if (loading) return <p>Chargement...</p>;\n    if (error) return <p>Erreur : {error.message}</p>;\n\n    return (\n        <div>\n            <h2>Liste des Comptes</h2>\n            <table>\n                <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Solde</th>\n                    <th>Date de Cr√©ation</th>\n                    <th>Type de Compte</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.allComptes.map((compte) => (\n                    <tr key={compte.id}>\n                        <td>{compte.id}</td>\n                        <td>{compte.solde}</td>\n                        <td>{compte.dateCreation}</td>\n                        <td>{compte.typeCompte}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Comptes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}